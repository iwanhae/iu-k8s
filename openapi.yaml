openapi: "3.1.0"
info:
  title: IU K8s API
  description: Backend API for IU K8s Operations
  version: 1.0.0
  contact:
    name: IU K8s Support
    slack: "#ext-help-iu-k8s"

servers:
  - url: http://localhost:8888
    description: Development server

paths:
  /readyz:
    get:
      summary: Readiness check endpoint
      operationId: getReadiness
      tags:
        - management
      responses:
        "200":
          description: Readiness status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadinessResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /debug/log:
    get:
      summary: Sets the log level and format dynamically
      operationId: setLogLevel
      tags:
        - management
      parameters:
        - name: level
          in: query
          description: The desired log level. If not provided, the current level is maintained.
          required: false
          schema:
            type: string
            enum: [debug, info, warn, error]
        - name: format
          in: query
          description: The desired log format. If not provided, the current format is maintained.
          required: false
          schema:
            type: string
            enum: [json, text]
      responses:
        "200":
          description: Log settings updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  level:
                    type: string
                    description: The new log level.
                  format:
                    type: string
                    description: The new log format.
        "400":
          description: Invalid input for level or format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  schemas:
    ReadinessResponse:
      type: object
      required:
        - status
        - version
        - timestamp
      properties:
        status:
          type: string
          enum: [ready, not_ready]
          description: Readiness status
        message:
          type: string
          description: Human-readable message
        timestamp:
          type: string
          format: date-time
          description: Timestamp of the readiness check
        version:
          type: string
          description: Application version

    MetadataPagination:
      type: object
      required:
        - cursor
        - hasMore
      properties:
        cursor:
          type: integer
          description: Cursor for pagination
        hasMore:
          type: boolean
          description: Whether there are more items to fetch

    ErrorResponse:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          description: Error code
        message:
          type: string
          description: Human-readable error message
        details:
          type: object
          description: Additional error details
        timestamp:
          type: string
          format: date-time
          description: Error timestamp
